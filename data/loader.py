# -*- coding: utf-8 -*-
"""loader.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kq8hO3dcqPKKHXOTRCTkRpNI2FRw6GDM
"""

import os
import numpy as np
import h5py
import scipy.io

def download_and_extract_mars():
    os.makedirs("datasets", exist_ok=True)
    os.chdir("datasets")
    if not os.path.exists("MARS-Pose.zip"):
        os.system("wget https://data.caltech.edu/records/mz2e9-8q45g/files/MARS-Pose.zip -O MARS-Pose.zip")
        os.system("unzip -q MARS-Pose.zip -d mars_data")
    os.chdir("..")

def load_mars_file(pose_path, label_path):
    try:
        with h5py.File(pose_path, 'r') as f:
            pose = np.array(f['pose'])  # shape: (2, 14, T)
            pose = pose.transpose(2, 1, 0)  # (T, J, 2)
        mat = scipy.io.loadmat(label_path)
        labels = mat['labels'][:, 0].astype(int)
        return pose, labels
    except Exception as e:
        print(f"Failed to load {pose_path}: {e}")
        return None, None

def load_all_mars_sequences(seq_len=30):
    pose_dir = "datasets/mars_data/MARS-Pose/data"
    label_dir = "datasets/mars_data/MARS-Pose/labels"
    X_all, y_all = [], []
    for fname in os.listdir(pose_dir):
        if fname.endswith(".h5"):
            base = fname.replace(".h5", "")
            pose_path = os.path.join(pose_dir, fname)
            label_path = os.path.join(label_dir, base + "_label.mat")
            pose, labels = load_mars_file(pose_path, label_path)
            if pose is None or len(labels) < seq_len + 1: continue
            pose = pose - pose.mean(axis=1, keepdims=True)
            pose /= (np.linalg.norm(pose, axis=(1, 2), keepdims=True) + 1e-8)
            for i in range(len(labels) - seq_len):
                X_all.append(pose[i:i+seq_len])
                y_all.append(labels[i + seq_len // 2])
    print(f"Loaded {len(X_all)} sequences.")
    return np.stack(X_all), np.array(y_all)